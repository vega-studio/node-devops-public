// @bun
import E from"path";import G from"fs-extra";async function Y(A,v,{lib:{util:{changecase:Q,openFile:R,description:L}}}){const z=Q.kebabCase(v.component),M=E.resolve(A?.componentsPath||"",v.category,z,`${z}.tsx`),D=E.resolve(M,"../../index.ts");if(!G.existsSync(D))console.warn(L`
    Not found: ${D}
    A parent barrel file within the component category was not found.
    One will be created.
  `),G.writeFileSync(D,"",{encoding:"utf-8"});let H=G.readFileSync(D,{encoding:"utf-8"});H=H.split(`export * from "./${z}/${z}.js";`).map((J)=>J.trim()).join("\n"),H=`${H.trim()}\nexport * from "./${z}/${z}.js";\n`,G.writeFileSync(D,`${H.trim()}\n`,{encoding:"utf-8"}),await R(D)}var $=async(A)=>{const{util:{changecase:v,openFile:Q,description:R},targetProject:{targetProjectPackage:L},component:{isComponentSelections:z,generateCategory:M,makeComponentSelections:D,checkComponentStructure:H},prompt:{promptTextInput:J}}=A.lib;let U=!1;const X=await L(),V=new Set;return A.components.forEach((K)=>V.add(v.pascalCase(E.basename(K,E.extname(K))))),{defaultTargetPath:E.resolve("./"),fileMap:[["./templates/component.template","./ui/components/${{category: kebab}}/${{component: kebab}}/${{component: kebab}}.tsx"],["./templates/scss.template","./ui/components/${{category: kebab}}/${{component: kebab}}/${{component: kebab}}.scss"],["./templates/story.template","./ui/stories/components/${{category: kebab}}/${{component: kebab}}.stories.tsx"],["./templates/props.template","./ui/stories/data/${{category: kebab}}/${{component: kebab}}-props.tsx"]],templateParams:{project:X.name},paramPrompts:async()=>{const K=G.readdirSync(A.componentsPaths?.componentsPath||"").filter((q)=>G.statSync(E.resolve(A.componentsPaths?.componentsPath||"",q)).isDirectory());return{component:{message:"Type a name for the component:",default:"",onValue:async(q)=>{while(V.has(v.pascalCase(q)))console.error("The component name you provided already exists."),q=await J("Type a name for the component:");return q=v.pascalCase(q),q}},category:{message:"Start typing to select the directory to add your new component:",default:K.concat(["New..."]),onValue:async(q)=>{if(q==="New..."){q=await J("Type a name for the new directory:"),q=v.kebabCase(q);while(G.existsSync(E.resolve(A.componentsPaths?.componentsPath||"",q)))console.error("The category/directory you provided already exists."),q=await J("Type a name for a new directory/category:"),q=v.kebabCase(q);U=!0}return q}}}},syncComplete:async(K,q,O)=>{if(z(O)){if(U&&q.componentsPaths)await M(q.componentsPaths,O);Y(q.componentsPaths,O,q)}}}};export{$ as default};
