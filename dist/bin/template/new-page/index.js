// @bun
import F from"path";import*as J from"change-case";import H from"fs-extra";var Q=async(D)=>{let E=[];async function G(q){let z=[];return D.components.forEach((w)=>{if(w.includes("-layout.tsx"))if(q)z.push(w);else z.push(F.basename(w,F.extname(w)||""))}),z.push("None..."),z}return{defaultTargetPath:F.resolve("./"),fileMap:[["./templates/page.template","./app/client/pages/${{page: kebab}}/${{page: kebab}}.page.tsx"],["./templates/scss.template","./app/client/pages/${{page: kebab}}/${{page: kebab}}.page.scss"]],templateParams:{layoutImport:" ",componentImport:" ",component:" "},paramPrompts:async()=>{return{page:{message:"Enter a name for the page (Exclude the word 'page' in the name, leave blank to select from a layout name):",default:"",onValue:async(q)=>{if(q=q?.trim(),!q){let z=(await G()).map((w)=>w.split("-layout")[0]).filter((w)=>{return!H.existsSync(F.resolve(`./app/client/pages/${w}`))});while(!q)q=await D.lib.prompt.promptSuggestions("Select a page name based on available layouts:",z)||""}while(q.toLowerCase().includes("page"))q=await D.lib.prompt.promptTextInput(`Error: The name you entered contains the word 'page'.
Please enter a name that excludes the word 'page' as the page will be a .page.tsx file:`);return q}},layout:{message:"Start typing to select the layout to utilize for the page:",default:await G(),onValue:async(q)=>{if(q!=="None..."){if((await D.lib.prompt.promptSelect("Should this attempt to embed detected used components in the layout?",["yes","no"]))?.toLowerCase()==="yes"){let B=(await G(!0)).find((A)=>A.includes(q));if(B&&H.existsSync(B)){let A=await H.readFile(B,"utf8"),I=Array.from(A.matchAll(/groups\.get\((.+)\)/g)).map((K)=>K[1]);if(I.length>0)E=I;else console.error("No components detected in layout:",B),console.error(D.lib.util.description`
                      The layout needs to use groupReactChildren and have calls like group.get(Component)
                      for this tool to pick up those in use.
                    `)}else console.error("Unable to find layout source file specified:",B),process.exit(1)}}return q}}}},transformToken:(q,z,w,B)=>{if(q[0]==="layoutImport"){let A=B.layout;if(A!==void 0&&A!=="None...")return`import { ${J.pascalCase(A)} } from "../../../../ui/index.js";`}if(q[0]==="componentImport"&&E.length>0)return`import {
  ${E.join(`,
  `)}
} from "../../../../ui/index.js";`;if(q[0]==="component")return`${E.map((A)=>`<${A} />`).join(`
        `)}`;if(q[0]==="layout"){if(z==="None...")return"div"}return w}}};export{Q as default};
