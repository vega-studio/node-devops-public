// @bun
import A from"path";import D from"fs-extra";var W=async(H)=>{const{util:{changecase:E,openFile:O,description:Q},targetProject:{targetProjectPackage:R},component:{isComponentSelections:U,generateCategory:V,makeComponentSelections:$,checkComponentStructure:j},prompt:{promptTextInput:K}}=H.lib;let L=!1;const X=await R(),M=new Set;H.components.forEach((z)=>M.add(E.pascalCase(A.basename(z,A.extname(z)))));async function Y(z,q){const v=E.kebabCase(q.component),Z=A.resolve(z?.componentsPath||"",q.category,v,`${v}.tsx`),G=A.resolve(Z,"../../index.ts");if(!D.existsSync(G))console.warn(Q`
      Not found: ${G}
      A parent barrel file within the component category was not found.
      One will be created.
    `),D.writeFileSync(G,"",{encoding:"utf-8"});let J=D.readFileSync(G,{encoding:"utf-8"});J=J.split(`export * from "./${v}/${v}.js";`).map((_)=>_.trim()).join("\n"),J=`${J.trim()}\nexport * from "./${v}/${v}.js";\n`,D.writeFileSync(G,`${J.trim()}\n`,{encoding:"utf-8"}),await O(G)}return{defaultTargetPath:A.resolve("./"),fileMap:[["./templates/component.template","./ui/components/${{category: kebab}}/${{component: kebab}}/${{component: kebab}}.tsx"],["./templates/scss.template","./ui/components/${{category: kebab}}/${{component: kebab}}/${{component: kebab}}.scss"],["./templates/story.template","./ui/stories/components/${{category: kebab}}/${{component: kebab}}.stories.tsx"],["./templates/props.template","./ui/stories/data/${{category: kebab}}/${{component: kebab}}-props.tsx"]],templateParams:{project:X.name},paramPrompts:async()=>{const z=D.readdirSync(H.componentsPaths?.componentsPath||"").filter((q)=>D.statSync(A.resolve(H.componentsPaths?.componentsPath||"",q)).isDirectory());return{component:{message:"Type a name for the component:",default:"",onValue:async(q)=>{while(M.has(E.pascalCase(q)))console.error("The component name you provided already exists."),q=await K("Type a name for the component:");return q=E.pascalCase(q),q}},category:{message:"Start typing to select the directory to add your new component:",default:z.concat(["New..."]),onValue:async(q)=>{if(q==="New..."){q=await K("Type a name for the new directory:"),q=E.kebabCase(q);while(D.existsSync(A.resolve(H.componentsPaths?.componentsPath||"",q)))console.error("The category/directory you provided already exists."),q=await K("Type a name for a new directory/category:"),q=E.kebabCase(q);L=!0}return q}}}},syncComplete:async(z,q,v)=>{if(U(v)){if(L&&q.componentsPaths)await V(q.componentsPaths,v);Y(q.componentsPaths,v)}}}};export{W as default};
